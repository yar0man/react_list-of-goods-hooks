{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortField","setSortField","isReversed","setIsReversed","goods","sort","good1","good2","sortByLength","length","sortByAlphabet","localeCompare","reverse","sortGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,8BAAAA,E,kCAAAA,E,YAAAA,M,KA2BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAzBR,SAAmBJ,EAAqBE,GACtC,IAAME,EAAK,UAAOR,GAiBlB,OAfII,GACFI,EAAMC,MAAK,SAACC,EAAOC,GACjB,OAAQP,GACN,KAAKL,EAASa,aACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKd,EAASe,eACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAKRL,EAAaE,EAAMQ,UAAYR,EAOxBS,CAAUb,EAAWE,GAEnC,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAcL,EAASe,iBAEvCO,QAAS,kBAAMhB,EAAaN,EAASe,iBAPvC,iCAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAcL,EAASa,eAEvCS,QAAS,kBAAMhB,EAAaN,EAASa,eAPvC,4BAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAad,IAEjBe,QAAS,kBAAMd,GAAeD,IAPhC,sBAYEF,GAAaE,IAEX,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,GAAc,GACdF,EAAaN,EAASI,UAL1B,sBAaN,6BACGK,EAAMc,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC3GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9427404f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  sortByLength = 'sort by length',\n  sortByAlphabet = 'sort by alphabet',\n  default = '',\n}\n\nfunction sortGoods(sortField: SortType, isReversed: boolean) {\n  const goods = [...goodsFromServer];\n\n  if (sortField) {\n    goods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.sortByLength:\n          return good1.length - good2.length;\n\n        case SortType.sortByAlphabet:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? goods.reverse() : goods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = sortGoods(sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SortType.sortByAlphabet },\n          )}\n          onClick={() => setSortField(SortType.sortByAlphabet)}\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SortType.sortByLength },\n          )}\n          onClick={() => setSortField(SortType.sortByLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setIsReversed(false);\n                setSortField(SortType.default);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}